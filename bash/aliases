# Aliases

alias ls='ls -pG'
# alias ls='ls -p --color=auto'   # uncomment for dir colors on linux
alias ll='ls -lph'
alias grep='GREP_COLOR="1;33;47" LANG=C grep --color=auto'
alias vi='vim -N'
alias vim='vim -N'
alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"

## mamp

alias mamp-mysql='/Applications/MAMP/Library/bin/mysql -u root -p'
alias mamp-apachectl='/Applications/MAMP/Library/bin/apachectl'

## git

alias gl='git pull'
alias gp='git push'
alias gd='git diff'
alias gdn='git diff --name-status -r'
alias gds='git diff --stat -r'            # diffstat
alias gc='git commit'
alias gca='git commit -a'
alias gco='git checkout'
alias gb='git branch'
alias gs='git status'
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"
alias glo="git log --stat"
alias glop="git log --pretty=oneline"
 
## rails

alias sc='script/console'
alias sd='script/dbconsole'
alias ss='script/server'
alias sg='script/generate'
alias tlog='tail -f log/development.log'
alias scaffold='script/generate scaffold'
alias nscaffold='script/generate nifty_scaffold'
alias rmig='rake db:migrate'
alias rpop='rake db:populate'
alias rst='touch tmp/restart.txt'

# Functions

# Adds an entry to a work log
function plog() {
  LOG="/path/to/log.txt";
  DATE=`date +"%A; %B %e, %Y"`;
  ENTRY="\n$DATE\n$1";
  echo -e $ENTRY >> $LOG;
}

# Ryan Bates' railsapp function
function railsapp {
  template=$1
  appname=$2
  shift 2
  rails $appname -m http://github.com/btoone/rails-templates/raw/master/$template.rb $@
}
# PeepCode - Advanced Command Line

# Utility

alias reload='source ~/code/dotfiles/bashrc'
alias ea='mate -w ~/code/dotfiles/bash/aliases && reload' # Edit aliases
alias ee="mate ~/code/dotfiles/bash/env"

# Quicker cd

alias cg='cd /Library/Ruby/Gems/1.8/gems/'

function cr() {
 cd ~/code/$*
}

# Common -- Some are from Damian Conway

alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'

function cdc() { 
    cd $1; ls 
}

alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias ll.='ls -ld .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir

function mkc() { 
    mkdir -p "$1"
    cd "$1" 
}

# copy working directory
# Use this command then open a new terminal window or tab and paste into `cd`
function cwd () {
  pwd | pbcopy
}


alias e='exit'
alias k9="killall -9"

function killnamed () { 
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill 
}

function zipr() {
  zip -r $1.zip $1
}

# Finder

alias o='open . &'
alias ff='open -a Firefox'
alias evernote='open -a Evernote'

# General code

## From Chris Wanstrath
function pless() { 
    pygmentize $1 | less -r 
}

## Processes

alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Git

alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'

## Commit pending changes and quote all args as message
function gg() { 
    git commit -v -a -m "$*"
}

alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias eg='mate .git/config'

## Git clone from GitHub
function gch() {
  git clone git://github.com/$USER/$1.git
}

## Setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}

## Quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}

## Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

# TextMate

alias et="mate"
alias ett="mate ."
alias etr="mate app config lib db schema public spec test vendor/gems vendor/plugins Rakefile Capfile Vladfile Todofile README stories merb slices tasks features &"

# Ruby

alias r="rake"

function markdown() { 
/Applications/TextMate.app/Contents/SharedSupport/Support/bin/Markdown.pl $1 > $1.html 
}

# Rails

alias mr='mongrel_rails start'
alias ms='mongrel_rails stop'
alias rp='touch tmp/restart.txt'
alias sc='./script/console'
alias sg='./script/generate'
alias sp='./script/plugin'
alias ss='./script/server'
alias tl='tail -f log/*.log'
alias ts='thin start'

# TDD / BDD

alias aa='autotest'
alias aaf='autotest -f' # Don't run all at start
alias aas="./script/autospec"

# Syntax check Javascript

function jsc() { 
  jsl -conf /etc/jsl/jsl.conf -process $1 
}

# XCode

alias ox="open *.xcodeproj"

# From http://github.com/suztomo/dotfiles

function rmf(){
    for file in $*
    do
        __rm_single_file $file
    done
}

function __rm_single_file(){
    if ! [ -d ~/.Trash/ ]
    then
        command /bin/mkdir ~/.Trash
    fi

    if ! [ $# -eq 1 ]
    then
        echo "__rm_single_file: 1 argument required but $# passed."
        exit
    fi

    if [ -e $1 ]
    then
        BASENAME=`basename $1`
        NAME=$BASENAME
        COUNT=0
        while [ -e ~/.Trash/$NAME ]
        do
            COUNT=$(($COUNT+1))
            NAME="$BASENAME.$COUNT"
        done

        command /bin/mv $1 ~/.Trash/$NAME
    else
        echo "No such file or directory: $file"
    fi
}