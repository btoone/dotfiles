# shellcheck shell=bash
# Colors from http://wiki.archlinux.org/index.php/Color_Bash_Prompt
# Usage: "\[$bldwht\]\W\[$txtrst\]$ "

txtrst='\e[0m'    # Text Reset

## Regular colors
txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White

## Bolded colors
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White

## Underlined colors
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White

## Background colors
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
badgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White

# Prompt Colors
#
# Usage example:
#   PS1="${RESET}${YELLOW}\h${NORMAL} \`${SELECT}\` ${YELLOW}>${NORMAL} "
RESET="\[\017\]"
NORMAL="\[\033[0m\]"
RED="\[\033[31;1m\]"
GREEN="\[\033[32;1m\]"
YELLOW="\[\033[33;1m\]"
WHITE="\[\033[37;1m\]"

#
# Add padding to push ruby version to the left side of the prompt window
#
function padding {
  printf "%${padding}s"

  # rbenv
  # printf "%${padding}s" "\$(`which rbenv` version-name)"     # this string of 25 chars taking away more padding
  
  # rvm
  # printf "%${padding}s" "\$(~/.rvm/bin/rvm-prompt v g)"
}

#
# Format prompt
#
# [Username] <current dir> [<version-control>]                                  <ruby version>
#
function bash_prompt_cmd() {
  
  username="`whoami`"
  username_length=${#username}
  
  ALTPWD="${PWD/#$HOME/~}"                                     # force home dir to return the same length
  basedir=`basename $ALTPWD`
  basedir_length=${#basedir}
  
  vcprompt=`vcprompt`
  vcprompt_length=${#vcprompt}
  
  # Default padding
  padding=$(( COLUMNS - username_length - basedir_length - vcprompt_length + 30))

  # various unicodes to fit my mood 
  # ✖ ★  ➽  ➲  ➔  ➤  ➥  →  ™  ‣ ♦  ✩  ✪  ❯ ❱ ❶  ✲ ✳ 
  # PS1="\n[\u] \W \$(vcprompt) `padding`\n➤ "
  # PS1="\n[\u] \W \$(vcprompt) `padding`\n★ "
  # PS1="\n[\u] \W \$(vcprompt) `padding`\n✲ "
  # PS1="\n[\u] \W \$(vcprompt) `padding`\n✖ "
  #
  # PS1="\n\t \[\033[32m\]\w\[\033[33m\] \$(vcprompt)\[\033[00m\]✖ "
  PS1="\n\t ${GREEN}\w${YELLOW} \$(vcprompt)${NORMAL}❱ "
}

#
# Defines everything to be done after each command executed in the terminal
#
function prompt_command() {
  bash_prompt_cmd                                                               # format the prompt

  # This has some strange behavior and doesn't work exactly as I expect; need to research more
  # history -a; history -n                                                        # update history from all windows/panes
}

PROMPT_COMMAND=prompt_command
