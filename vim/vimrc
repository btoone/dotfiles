" Globals
" =======
" Support filetypes and enable modern features of vim
set nocompatible

" Turn on filetype detection, load plugin files for specific file types and
" enable the loading of indent files. See `:help filetype` for more info.
" Essentially the same as:
"
"     filetype on
"     filetype plugin on
"     filetype indent on
filetype plugin indent on

" Enable syntax highlighting
syntax enable

" Add subfolders to path for recursive search
set path+=**

" Plugins
" =======

" Load the matchit plugin
runtime macros/matchit.vim

" Configure ctrlp
set wildignore+=*/node_modules/*
let g:ctrlp_custom_ignore = '\v[\/](doc|log)$'

" Enable copy/paste integration with pbcopy/pbpaste
if $TMUX == ''
  set clipboard+=unnamed
endif

" Navigation
" ==========

" Remap shift-h and shift-l to jump to the beginning and end of the line
nnoremap H ^
nnoremap L $

" Markdown
" ========

" Autocomplete with dictionary words when spell check is on using C-n and C-p
set complete+=kspell

" Enable spellchecking for Markdown
autocmd FileType markdown setlocal spell

" Automatically wrap at 80 characters for Markdown
autocmd BufRead,BufNewFile *.md setlocal textwidth=80

" Force *.md files to be detected as markdown filetype
autocmd BufReadPost,BufNewFile *.md set filetype=markdown

" Git
" ===

" Automatically wrap at 72 characters and spell check git commit messages
autocmd FileType gitcommit setlocal textwidth=72
autocmd FileType gitcommit setlocal spell

" Prevent backup behavior
" =================================

" Dont make a backup before before editing a file - disable default behavior
set nobackup
set nowritebackup

" Turn off using swap files
set noswapfile

" Mode Lines
" ==========

" Overide OSX modelines=0; Enables modelines in files
" http://unix.stackexchange.com/q/19875/30303
set modeline
set modelines=10

" Leader Key Remaps
" =================

" Remap leader key to be spacebar
let mapleader = " "

" Toggle the nerdtree window with leader + d
nmap <leader>d :NERDTreeToggle<CR>
" Show hidden files by default; toggle with Shift+i
let NERDTreeShowHidden=1    

" Quickly switch to previous file
nnoremap <leader>e <C-^><CR>

" Remap leader + a (,a) to Ack
nnoremap <leader>a :Ack

" Easier quitting
nmap <leader>q :q<CR>
nmap <leader>w :w!<CR>

" Index ctags from any project, including those outside Rails
map <leader>ct :!ctags -R --exclude=.git --exclude=log --exclude=vendor/assets/bower_components --exclude=node_modules .<CR>

" Use ctrl+p to serach ctags
nnoremap <leader>. :CtrlPTag<CR>
nnoremap <leader>b :CtrlPBuffer<CR>

" Toggle the tagbar
nnoremap <silent> <leader>t :TagbarToggle<CR>

" Toggle spell
nmap <F5> :setlocal spell!<cr>

" Open a new unnamed buffer using ctrl + n
nnoremap <leader>n :enew<CR>

" Make it easier to backspace while typing
imap <C-u> <C-w>

" Open  markdown preview in background using Marked 2.app - Requires
" itspriddle/vim-markdown plugin
nmap <leader>p :MarkedOpen!<CR>

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
set listchars=eol:¬

" Quicker Git Status (fugitive)
nmap <leader>g :Gstatus<CR>

" Searching
" =========

" Default to regex search
nnoremap / /\v
vnoremap / /\v

" Dont need /g after :s or :g
set gdefault

" Case-insensitive searching
set ignorecase

" Enable incremental searching
set incsearch

" Highlight matches as you type
set hlsearch

" Color Schemes
" =============
colorscheme PaperColor

set background=dark

" highlight current line of text
set cursorline

" Folding settings
" ================

" Fold based on indent
set foldmethod=indent

" Deepest fold is 10 levels
set foldnestmax=10

" Dont fold by default
set nofoldenable

" This is just what i use
set foldlevel=1

autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" Line numbering
" ==============

" Show line numbers
set number
set numberwidth=5

" Change line numberings for ease with writing commands
set relativenumber

" Disable the arrow keys
" ======================

nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>

" Splits
" ======

" Normalize split behavior
set splitbelow
set splitright

" Move between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Default Directory – Netrw
" =========================
let g:netrw_liststyle = 3
let g:netrw_banner = 0

" Easytags
" ========
let g:easytags_async=1
let g:easytags_auto_highlight=0

" Airline
" =======
" Set airline theme. Options are: powerlineish, 'tomorrow', 'papercolor', 'bubblegum', 'simple' 
let g:airline_theme = 'papercolor'
let g:airline_powerline_fonts = 1

" Miscellaneous
" =============

" Display incomplete commands
set showcmd

" Display the mode youre in
set noshowmode

" Intuitive backspacing
set backspace=indent,eol,start

" Hide unsaved buffers instead of closing them
set hidden

" Enhanced command line completion
set wildmenu

" Complete files like a shell
set wildmode=longest:full,full

" But case-sensitive if expression contains a capital letter
set smartcase

" Turn off line wrapping by default
set nowrap

" Make it obvious where 80 characters is
set colorcolumn=80

" Show 3 lines of context around the cursor
set scrolloff=3

" Set the terminals title
set title

" No beeping
set visualbell

" Global tab width
set tabstop=2

" And again, related
set shiftwidth=2

" Use spaces instead of tabs
set expandtab

" Set region to US
set spelllang=en_us

" Local config
if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif

