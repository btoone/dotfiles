" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.

" Disable plugins if needed
"let g:loaded_endwise = 1
"let g:loaded_AutoClose = 1

set nocompatible                  " Must come first because it changes other options.
filetype plugin on                " Turn on plugins.
filetype plugin indent on         " Fixes vim-endwise indent problem.
runtime macros/matchit.vim        " Load the matchit plugin.

" Overide OSX modelines=0; Enables modelines in files
" http://unix.stackexchange.com/q/19875/30303
set modeline
set modelines=10

syntax enable                     " Turn on syntax highlighting.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.
"set history=50

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Commands :bnext, :bprevious and :buffer won't abandon the buffer until any changes have been written

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set nowrap                        " Turn off line wrapping by default
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

" Markdown
set colorcolumn=100
set textwidth=100

" Prevent annoying backup behavior
set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set noswapfile
" set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location - doesnt appear to work

" UNCOMMENT TO USE
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Or use vividchalk, top-funky
" colorscheme vividchalk
" colorscheme github
colorscheme topfunky-light
" colorscheme railscasts
" colorscheme twilight
" colorscheme codeschool
" colorscheme grb256

" <leader> key
let mapleader = ","

" quickly switch files
map <leader>e :edit#<CR>


" buffer nav
nnoremap <silent> [b :bprevious <CR>
nnoremap <silent> ]b :bnext <CR>

" Command-t config
let g:CommandTMaxHeight=10

" Controversial...swap colon and semicolon for easier commands
" Makes it easier to do ctrl+o and a colon cmd but prevents traversal commands
" like f{char}; where the ; will repeat the find command
"nnoremap ; :
"nnoremap : ;
"vnoremap ; :
"vnoremap : ;


" Folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" Automatic fold settings for specific files. Uncomment to use.
autocmd FileType ruby setlocal foldmethod=syntax
"autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2


" Automatically source/reload vimrc after saving. Disabled since it doesn't
" appear to work. To reload your config manually run the command `:source ~/.vimrc`
" if has("autocmd")
"   autocmd bufwritepost .vimrc source $MYVIMRC
"   autocmd FileType ruby,eruby :let g:AutoCloseExpandEnterOn=""
" endif


" Make Nerd Tree smaller
"let NERDTreeWinSize=16


" Not sure what this does
"autocmd VimEnter * wincmd l


" change line numberings for ease with writing commands
set number                        " Show line numbers.
"set relativenumber


" fix regexes default regex handling by auto-inserting \v before every REGEX.
" Now regexs are Ruby compatible
nnoremap / /\v
vnoremap / /\v


" Map ESC to jj and save my pinky   
"imap jj <ESC>

" Switch between buffers
" ----------------------
" Allows you to use Tab to navigate between split windows
noremap <tab> <C-w><C-w>

" Toggle the nerdtree window
nmap <silent> <leader>d :NERDTreeToggle<CR>


" ,a to Ack
nnoremap <leader>a :Ack 

" Rotating among results in an ack search
map <C-n> :cn<CR>
map <C-p> :cp<CR>


" remap space bar to search
:nmap <Space> /


" Get off my lawn - Disable the arrow keys
"nnoremap <Up> <nop>
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
"inoremap <Left>  <ESC>:echoe 'Exit insert mode and use a movment instead'<CR>

" Better default behaviour with left and right, especially with wrapped lines
nnoremap j gj
nnoremap k gk


" Easier quitting
" ---------------
nmap <leader>q :wq!<CR>
nmap <leader>w :w!<CR>


" Splits  ,v to open a new vertical split and switch to it
nnoremap <leader>v <C-w>v<C-w>l
nnoremap <leader>s <C-w>s<C-w>j


" Move between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Plugin options

" autoclose plugin - not sure which autoclose plugin this is for
"let g:AutoClosePairs = {'(': ')', '{': '}', '[': ']', '"': '"', "'": "'", '#{': '}', '|':'|' } 
"let g:AutoCloseProtectedRegions = ["Character"] 

" don't need /g after :s or :g
set gdefault

" Ruler stuff doesn't change anything. Maybe another plugin is setting the ruler
"set ruler                         " Show cursor position.
"set rulerformat=%l,%c%V%=%P

" CAUTION - this currently blanks out the Terminal screen after using. However it works fine with
" MacVim.
" Preview markdown files using <leader> p
function! s:setupMarkup()
  nnoremap <leader>p :silent !open -a Marked.app '%:p'<cr>
endfunction
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

call pathogen#infect()                 " Cause Tim Pope told me to add this

