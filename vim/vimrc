" Must come first because it changes other options
set nocompatible
filetype off

" Plugins
" =================================

" Source the Vundle config
if filereadable(expand("~/.vim/vimrc.bundles"))
  source ~/.vim/vimrc.bundles
endif

filetype on
filetype plugin on

" Fixes vim-endwise indent problem
filetype indent on

" Turn on syntax highlighting
syntax on

" Load the matchit plugin
runtime macros/matchit.vim

" Configure ctrlp
set runtimepath^=~/.vim/bundle/ctrlp.vim
set wildignore+=*/node_modules/*

" Enable copy/paste integration with pbcopy/pbpaste
set clipboard=unnamed

" Navigation
" =================================

" Use Tab to navigate between split windows - conflicts with snippets
" noremap <tab> <C-w><C-w>

" Remap shift-h and shift-l to jump to the beginning and end of the line
nnoremap H ^
nnoremap L $

" Better default nav behavior
" nnoremap j gj

" Better default nav behavior
" nnoremap k gk


" Markdown
" =================================

" Autocomplete with dictionary words when spell check is on using C-n and C-p
set complete+=kspell

" Enable spellchecking for Markdown
autocmd FileType markdown setlocal spell

" Automatically wrap at 80 characters for Markdown
autocmd BufRead,BufNewFile *.md setlocal textwidth=80

" Force *.md files to be detected as markdown filetype
autocmd BufReadPost,BufNewFile *.md set filetype=markdown

" Git
" =================================

" Automatically wrap at 72 characters and spell check git commit messages
autocmd FileType gitcommit setlocal textwidth=72
autocmd FileType gitcommit setlocal spell


" Prevent backup behavior
" =================================

" Dont make a backup before before editing a file - disable default behavior
set nobackup
set nowritebackup

" Turn off using swap files
set noswapfile

" Keep backup and swap files in one location
" set backupdir=$HOME/.vim/tmp//,.
" set directory=$HOME/.vim/tmp//,.

" Mode lines
" =================================

" Overide OSX modelines=0; Enables modelines in files
" http://unix.stackexchange.com/q/19875/30303
set modeline
set modelines=10


" Leader key remaps
" =================================

" Remap leader key to be spacebar
let mapleader = " "

" Quickly switch to previous file
map <leader>e :edit#<CR>

" Toggle the nerdtree window with leader + d
nmap <leader>d :NERDTreeToggle<CR>
let NERDTreeShowHidden=1    "Show hidden files by default; toggle with Shift+i

" Remap leader + a (,a) to Ack
nnoremap <leader>a :Ack

" Easier quitting
nmap <leader>q :q<CR>
nmap <leader>w :w!<CR>

" Index ctags from any project, including those outside Rails
map <Leader>ct :!ctags -R --exclude=.git --exclude=log --exclude=vendor/assets/bower_components --exclude=node_modules .<CR>

" Use ctrl+p to serach ctags
nnoremap <leader>. :CtrlPTag<CR>
nnoremap <leader>b :CtrlPBuffer<CR>

" Toggle the tagbar
nnoremap <silent> <Leader>t :TagbarToggle<CR>

" Toggle spell
nmap <F5> :setlocal spell!<cr>

" Open a new unnamed buffer using ctrl + n
nnoremap <leader>n :enew<CR>

" Toggle the scratch buffer - use <tab> to close buffer
nnoremap <leader>sc :ScratchPreview<cr>

" Make it easier to backspace while typing
imap <C-u> <C-w>
" imap <C-]> <C-w>

" Open  markdown preview in background using Marked 2.app - Requires
" itspriddle/vim-markdown plugin
nmap <leader>p :MarkedOpen!<CR>

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
set listchars=eol:¬

" Quickly edit and source to reload the vimrc file. To reload your config 
" manually run the command `:source ~/.vimrc`
" nmap <silent> <leader>ev :e $MYVIMRC<CR>    " Use bash alias instead - 'ev'; Having another leader with the same first character slows performance
nmap <silent> <leader>sv :source $MYVIMRC<CR>

" Searching
" =================================

" Clear search highlight
" WARNING – Breaks quickfix and argslist jumping. Use :noh manually each time instead.
" noremap <CR> :set hlsearch!<CR>

" Default to regex search
nnoremap / /\v
vnoremap / /\v

" Dont need /g after :s or :g
set gdefault

" Case-insensitive searching
set ignorecase

" Enable incremental searching
set incsearch

" Highlight matches as you type
set hlsearch


" Color shemes
" =================================

" colorscheme base16-default          " requires background=dark to be set
" colorscheme codeschool
" colorscheme default
" colorscheme emacs
" colorscheme github
" colorscheme grb256
" colorscheme pink
" colorscheme railscasts
" colorscheme Tomorrow-Night-Bright
colorscheme Tomorrow-Night
" colorscheme Tomorrow
" colorscheme topfunky-light
" colorscheme twilight
" colorscheme vividchalk

set background=dark
" set background=light


" Folding settings
" =================================

" Fold based on indent
set foldmethod=indent

" Deepest fold is 10 levels
set foldnestmax=10

" Dont fold by default
set nofoldenable

" This is just what i use
set foldlevel=1

autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2


" Line numbering
" =================================

" Show line numbers
set number
set numberwidth=5

" Change line numberings for ease with writing commands
" set relativenumber


" Buffer handling
" =================================

nnoremap <silent> [b :bprevious <CR>
nnoremap <silent> ]b :bnext <CR>


" Rotating results in an ack search
" =================================

map <C-n> :cn<CR>
map <C-p> :cp<CR>


" Disable the arrow keys
" =================================

" nnoremap <Up> <nop>
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" inoremap <Left>  <ESC>:echoe 'Exit insert mode and use a movment instead'<CR>


" Splits
" =================================

" Normalize split behavior
set splitbelow
set splitright

" Move between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Find
" =================================

" Launch find
nnoremap <leader>f :find *

" Launch find in a horizontally split window
nnoremap <leader>fs :sfind *

" Launch find in a vertically split window
nnoremap <leader>fv :vert sfind *

" Command-line window
" =================================

" Remap :: to open the command-line history window (q:)
nnoremap :: q:

" Remap // to open the command-line search window (q/)
nnoremap // q/

" Default Directory – Netrw
" =================================
let g:netrw_liststyle = 3
let g:netrw_banner = 0
" let g:netrw_browse_split = 4
" let g:netrw_altv = 1
" let g:netrw_winsize = 25
" augroup ProjectDrawer
"   autocmd!
"   autocmd VimEnter * :Vexplore
" augroup END


" Miscellaneous
" =================================

" Map ESC to ;;
inoremap ;; <ESC>
vnoremap ;; <ESC>

" Display incomplete commands
set showcmd

" Display the mode youre in
set noshowmode

" Intuitive backspacing
set backspace=indent,eol,start

" Hide unsaved buffers instead of closing them
set hidden

" Enhanced command line completion
set wildmenu

" Complete files like a shell
set wildmode=longest:full,full

" But case-sensitive if expression contains a capital letter
set smartcase

" Turn off line wrapping by default
set nowrap

" Make it obvious where 80 characters is
set colorcolumn=80

" Show 3 lines of context around the cursor
set scrolloff=3

" Set the terminals title
set title

" No beeping
set visualbell

" Global tab width
set tabstop=2

" And again, related
set shiftwidth=2

" Use spaces instead of tabs
set expandtab

" Show the status line all the time (overridden by vim-airline)
" set laststatus=1

" Set region to US
set spelllang=en_us

" Useful status information at bottom of screen - prefer powerline from
" vim-airline/vim-airline instead
" set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Enable symbol usage with powerline (vim-airline/vim-airline)
" let g:airline_powerline_fonts = 1
let g:airline_theme = 'powerlineish'
" let g:airline_theme = 'tomorrow'
" let g:airline_theme = 'papercolor'
" let g:airline_theme = 'bubblegum'
" let g:airline_theme = 'simple'

" Use tab key for tab completion - conflicts with markdown autocomplete and tab completion using <c-p>
" imap <Tab> <C-P>

" Add .git to the seach path for tags - cant get vim to find the tags file
" when its in the .git folder
" set tags=.git/tags

" Local config
if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif
