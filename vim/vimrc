" Must come first because it changes other options
set nocompatible
filetype off

" Enable copy/paste integration with pbcopy/pbpaste
set clipboard=unnamed

" Plugins
" =================================

" Source the Vundle config
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Fixes vim-endwise indent problem
filetype plugin indent on

" Load the matchit plugin
runtime macros/matchit.vim

" Configure ctrlp
set runtimepath^=~/.vim/bundle/ctrlp.vim 

" Navigation
" =================================

" Use Tab to navigate between split windows
noremap <tab> <C-w><C-w>

" Remap shift-h and shift-l to jump to the beginning and end of the line
nnoremap H ^
nnoremap L $

" Better default nav behavior
" nnoremap j gj

" Better default nav behavior
" nnoremap k gk


" Markdown
" =================================

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Autocomplete with dictionary words when spell check is on
set complete+=kspell

" Enable spellchecking for Markdown
autocmd FileType markdown setlocal spell

" Automatically wrap at 80 characters for Markdown
autocmd BufRead,BufNewFile *.md setlocal textwidth=80
autocmd BufReadPost,BufNewFile *.md set filetype=markdown


" Git
" =================================

" Automatically wrap at 72 characters and spell check git commit messages 
autocmd FileType gitcommit setlocal textwidth=72
autocmd FileType gitcommit setlocal spell


" Prevent backup behavior
" =================================

" Dont make a backup before overwriting a file
set nobackup

" And again
set nowritebackup

set noswapfile

" Keep swap files in one location - doesnt appear to work
" set directory=$HOME/.vim/tmp//,.


" Mode lines 
" =================================

" Overide OSX modelines=0; Enables modelines in files
" http://unix.stackexchange.com/q/19875/30303
set modeline
set modelines=10


" Leader key remaps
" =================================

" Remap leader key to comma
let mapleader = ","

" Quickly switch to previous file
map <leader>e :edit#<CR>

" Toggle the nerdtree window with leader + d (,d)
nmap <silent> <leader>d :NERDTreeToggle<CR>


" Searching
" =================================

" Remap space bar to search
nmap <Space> /

" Press enter after seach to clear highlight
nnoremap <CR> :noh<CR><CR>

" Default to regex search
nnoremap / /\v
vnoremap / /\v

" Dont need /g after :s or :g
set gdefault

" Case-insensitive searching
set ignorecase

" Highlight matches as you type
set incsearch

" Highlight matches
set hlsearch

" Turn on syntax highlighting
syntax enable


" Color shemes
" =================================

" colorscheme vividchalk
" colorscheme github
" colorscheme topfunky-light
" colorscheme railscasts
" colorscheme twilight
" colorscheme codeschool
" colorscheme grb256
" colorscheme base16-default          " requires background=dark to be set
" colorscheme tomorrow
colorscheme tomorrow-night
" colorscheme tomorrow-night-bright

set background=dark
" set background=light


" Folding settings
" =================================

" Fold based on indent
set foldmethod=indent

" Deepest fold is 10 levels
set foldnestmax=10

" Dont fold by default
set nofoldenable

" This is just what i use
set foldlevel=1

autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2


" Line numbering
" =================================

" Show line numbers
set number
set numberwidth=5

" Change line numberings for ease with writing commands
" set relativenumber


" Buffer handling 
" =================================

nnoremap <silent> [b :bprevious <CR>
nnoremap <silent> ]b :bnext <CR>


" Rotating results in an ack search
" =================================

map <C-n> :cn<CR>
map <C-p> :cp<CR>


" Disable the arrow keys
" =================================

" nnoremap <Up> <nop>
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" inoremap <Left>  <ESC>:echoe 'Exit insert mode and use a movment instead'<CR>


" Easier quitting
" =================================

nmap <leader>q :wq!<CR>
nmap <leader>w :w!<CR>


" Splits
" =================================

" 
set splitbelow
set splitright

" Move between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" ,v to open a new vertical split and switch to it
nnoremap <leader>v <C-w>v<C-w>l

" ,s to open a new horizontal split and switch to it
nnoremap <leader>s <C-w>s<C-w>j


" Find
" =================================

" ,f to launch find
nnoremap <leader>ff :find *

" ,fs to launch find in a horizontally split window
nnoremap <leader>fs :sfind *

" ,fv to launch find in a vertically split window
nnoremap <leader>fv :vert sfind *

" Command-line window 
" =================================

" Remap :: to open the command-line history window (q:)
nnoremap :: q:

" Remap // to open the command-line search window (q/)
nnoremap // q/


" Miscellaneous 
" =================================

" set history=50

" Make Nerd Tree smaller
" let NERDTreeWinSize=16

" Remap leader + a (,a) to Ack
nnoremap <leader>a :Ack

" Map ESC to ;;
inoremap ;; <ESC>
vnoremap ;; <ESC>

" Display incomplete commands
set showcmd

" Display the mode youre in
set showmode

" Intuitive backspacing
set backspace=indent,eol,start

" Commands :bnext, :bprevious and :buffer wont abandon the buffer until all 
" changes have been written
set hidden

" Enhanced command line completion
set wildmenu

" Complete files like a shell
set wildmode=list:longest

" But case-sensitive if expression contains a capital letter
set smartcase

" Turn off line wrapping by default
set nowrap

" Show 3 lines of context around the cursor
set scrolloff=3

" Set the terminals title
set title

" No beeping
set visualbell

" Global tab width
set tabstop=2

" And again, related
set shiftwidth=2

" Use spaces instead of tabs
set expandtab

" Show the status line all the time
set laststatus=2

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Automatically source/reload vimrc after saving. Disabled since it doesnt
" appear to work. To reload your config manually run the command `:source ~/.vimrc`
" if has("autocmd")
"   autocmd bufwritepost .vimrc source $MYVIMRC
"   autocmd FileType ruby,eruby :let g:AutoCloseExpandEnterOn=""
" endif

" Cause Tim Pope told me to add this
call pathogen#infect()
